{"version":3,"sources":["components/CreateUser.js","components/CreateExercise.js","components/ExercisesList.js","App.js","index.js"],"names":["CreateUser","props","state","username","handleChange","bind","handleSubmit","e","console","log","target","value","this","setState","a","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","id","onSubmit","htmlFor","onChange","type","name","placeholder","Component","CreateExercise","_id","description","duration","date","inputName","inputValue","data","catch","error","ExercisesList","logs","exerciseID","handleEdit","handleEditSubmit","handleDelete","listIndex","Array","from","parentElement","children","indexOf","slice","Number","focus","dataPlusEditing","map","isEditing","toBeUpdatedLog","filter","toBeUpdatedLogMinusEditing","toBeDeletedID","year","Date","getFullYear","month","getMonth","aDate","getDate","YYYY_MM_DD","onEditingRow","toString","onClick","App","handle_idChange","style","textAlign","ReactDOM","render","document","getElementById"],"mappings":"8PAGMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,SAAU,IAEd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANL,E,gDASnB,SAAaE,GACTC,QAAQC,IAAIF,EAAEG,OAAOC,OACrBH,QAAQC,IAAIG,KAAKV,MAAMC,UACvBS,KAAKC,SAAS,CACVV,SAAUI,EAAEG,OAAOC,U,iEAI3B,WAAmBJ,GAAnB,SAAAO,EAAA,6DACIP,EAAEQ,iBADN,SAEUC,MAAM,kCAAmC,CAC3CC,OAAQ,OACRC,KAAMC,KAAKC,UAAUR,KAAKV,OAC1BmB,QAAS,CACL,eAAgB,sBAGvBC,KAPK,uCAOA,WAAMC,GAAN,SAAAT,EAAA,kEAAaN,QAAb,SAA+Be,EAAIC,OAAnC,iDAAqBf,IAArB,4DAPA,uDAFV,gD,2EAYA,WACI,OACI,mCACI,uBAAMgB,GAAG,YAAYC,SAAWd,KAAKN,aAArC,UACI,qBAAKmB,GAAG,aAAR,8BACA,sBAAKA,GAAG,cAAR,UACI,uBAAOE,QAAQ,OAAf,kBACA,uBAAOF,GAAG,OAAOG,SAAUhB,KAAKR,aAAcyB,KAAK,OAAOC,KAAK,OAAOC,YAAY,WAAWpB,MAAOC,KAAKV,MAAMC,uB,GArC9G6B,aA6CVhC,IC7CTiC,G,wDACF,WAAYhC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgC,IAAK,GACLC,YAAa,GACbC,SAAU,GACVC,KAAM,IAEV,EAAK/B,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBATL,E,gDAYnB,SAAaE,GACT,IAAM+B,EAAY/B,EAAEG,OAAOoB,KACrBS,EAAahC,EAAEG,OAAOC,MACV,QAAd2B,EACA1B,KAAKC,SAAS,CACVqB,IAAKK,IAEY,gBAAdD,EACP1B,KAAKC,SAAS,CACVsB,YAAaI,IAEI,aAAdD,EACP1B,KAAKC,SAAS,CACVuB,SAAUG,IAEO,SAAdD,GACP1B,KAAKC,SAAS,CACVwB,KAAME,IAGd/B,QAAQC,IAAIG,KAAKV,S,iEAGrB,WAAmBK,GAAnB,SAAAO,EAAA,6DACIP,EAAEQ,iBACFP,QAAQC,IAAIU,KAAKC,UAAU,CACvBe,YAAavB,KAAKV,MAAMiC,YACxBC,SAAUxB,KAAKV,MAAMkC,SACrBC,KAAMzB,KAAKV,MAAMmC,OACjB,cANR,SAOUrB,MAAM,mCAAD,OAAoCJ,KAAKV,MAAMgC,IAA/C,cAAgE,CACvEjB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACjBe,YAAavB,KAAKV,MAAMiC,YACxBC,SAAUxB,KAAKV,MAAMkC,SACrBC,KAAMzB,KAAKV,MAAMmC,OAErBhB,QAAS,CACL,eAAgB,mBAChB,OAAU,uCAGbC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAkB,GAAI,OAAIhC,QAAQC,IAAI+B,MACzBC,OAAM,SAAAC,GAAK,OAAIlC,QAAQC,IAAIiC,MArBpC,gD,2EAwBA,WACI,OACI,mCACI,uBAAMjB,GAAG,gBAAgBC,SAAUd,KAAKN,aAAxC,UACI,qBAAKmB,GAAG,aAAR,iCACA,sBAAKA,GAAG,cAAR,UACI,sBAAKA,GAAG,cAAR,UACI,uBAAOE,QAAQ,MAAf,gBACA,uBAAOF,GAAG,MAAMG,SAAUhB,KAAKR,aAAcyB,KAAK,OAAOC,KAAK,MAAMC,YAAY,KAAKpB,MAAOC,KAAKV,MAAMgC,SAE3G,sBAAKT,GAAG,cAAR,UACI,uBAAOE,QAAQ,cAAf,yBACA,uBAAOF,GAAG,cAAcG,SAAUhB,KAAKR,aAAcyB,KAAK,OAAOC,KAAK,cAAcC,YAAY,cAAcpB,MAAOC,KAAKV,MAAMiC,iBAEpI,sBAAKV,GAAG,cAAR,UACI,uBAAOE,QAAQ,WAAf,sBACA,uBAAOF,GAAG,WAAWG,SAAUhB,KAAKR,aAAcyB,KAAK,OAAOC,KAAK,WAAWC,YAAY,WAAWpB,MAAOC,KAAKV,MAAMkC,cAE3H,sBAAKX,GAAG,cAAR,UACI,uBAAOE,QAAQ,OAAf,kBACA,uBAAOF,GAAG,OAAQG,SAAUhB,KAAKR,aAAcyB,KAAK,OAAOC,KAAK,OAAOC,YAAY,OAAOpB,MAAOC,KAAKV,MAAMmC,aAGpH,wBAAQZ,GAAG,yBAAyBI,KAAK,SAAzC,6B,GAnFSG,cA0FdC,I,sBC3FTU,E,kDACF,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgC,IAAK,GACLU,KAAM,GACNC,WAAY,IAGhB,EAAKzC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKyC,WAAa,EAAKA,WAAWzC,KAAhB,gBAClB,EAAK0C,iBAAmB,EAAKA,iBAAiB1C,KAAtB,gBACxB,EAAK2C,aAAe,EAAKA,aAAa3C,KAAlB,gBAZL,E,gDAenB,SAAaE,GAET,GADAC,QAAQC,IAAIF,EAAEG,OAAOC,OACD,sBAAhBJ,EAAEG,OAAOe,GACTb,KAAKC,SAAS,CACVqB,IAAK3B,EAAEG,OAAOC,YAEf,CACH,IAAMsC,EAAYC,MAAMC,KAAK5C,EAAEG,OAAO0C,cAAcA,cAAcA,cAAcC,UAAUC,QAAQ/C,EAAEG,OAAO0C,cAAcA,eACrG,qBAAhB7C,EAAEG,OAAOe,GACTb,KAAKC,SAAS,CACV+B,KAAK,GAAD,mBACGhC,KAAKV,MAAM0C,KAAKW,MAAM,EAAGN,IAD5B,4BAGOrC,KAAKV,MAAM0C,KAAKK,IAHvB,IAIId,YAAa5B,EAAEG,OAAOC,SAJ1B,YAMGC,KAAKV,MAAM0C,KAAKW,MAAMN,EAAY,OAGtB,kBAAhB1C,EAAEG,OAAOe,IAChBb,KAAKC,SAAS,CACV+B,KAAK,GAAD,mBACGhC,KAAKV,MAAM0C,KAAKW,MAAM,EAAGN,IAD5B,4BAGOrC,KAAKV,MAAM0C,KAAKK,IAHvB,IAIIb,SAAUoB,OAAOjD,EAAEG,OAAOC,UAJ9B,YAMGC,KAAKV,MAAM0C,KAAKW,MAAMN,EAAY,OAIjD1C,EAAEG,OAAO+C,W,iEAIjB,WAAmBlD,GAAnB,oBAAAO,EAAA,6DACIP,EAAEQ,iBACFP,QAAQC,IAAIG,KAAKV,MAAMgC,KAF3B,SAGUlB,MAAM,mCAAD,OAAoCJ,KAAKV,MAAMgC,IAA/C,SAA2D,CAClEjB,OAAQ,QAKPK,KANC,uCAMI,WAAMC,GAAN,iBAAAT,EAAA,sEACiBS,EAAIC,OADrB,OACIgB,EADJ,OAEIkB,EAAkB,YAAIlB,EAAKI,MAAMe,KAAI,SAAAnB,GACvC,OAAO,2BACAA,GADP,IAEIoB,WAAW,OAGnBpD,QAAQC,IAAIiD,GACZ,EAAK7C,SAAS,CACV+B,KAAMc,IAVR,2CANJ,uDAmBDjB,OAAM,SAAAC,GAAK,OAAIlC,QAAQC,IAAIiC,MAtBpC,OAuBI9B,KAAKC,SAAS,CACVqB,IAAK,KAxBb,gD,sHA4BA,WAAiB3B,GAAjB,eAAAO,EAAA,sDACIN,QAAQC,IAAI,cACZD,QAAQC,IAAIF,EAAEG,OAAO0C,cAAcA,cAAc3B,IAC3CwB,EAAYC,MAAMC,KAAK5C,EAAEG,OAAO0C,cAAcA,cAAcA,cAAcC,UAAUC,QAAQ/C,EAAEG,OAAO0C,cAAcA,eACzHxC,KAAKC,SAAS,CACVgC,WAAYtC,EAAEG,OAAO0C,cAAcA,cAAc3B,GACjDmB,KAAK,GAAD,mBACGhC,KAAKV,MAAM0C,KAAKW,MAAM,EAAGN,IAD5B,4BAGOrC,KAAKV,MAAM0C,KAAKK,IAHvB,IAIIW,WAAW,KAJf,YAMGhD,KAAKV,MAAM0C,KAAKW,MAAMN,EAAY,OAZjD,gD,4HAkBA,WAAuB1C,GAAvB,oCAAAO,EAAA,6DACIN,QAAQC,IAAI,oBACNwC,EAAYC,MAAMC,KAAK5C,EAAEG,OAAO0C,cAAcA,cAAcA,cAAcC,UAAUC,QAAQ/C,EAAEG,OAAO0C,cAAcA,eACzHxC,KAAKC,SAAS,CACVgC,WAAY,GACZD,KAAK,GAAD,mBACGhC,KAAKV,MAAM0C,KAAKW,MAAM,EAAGN,IAD5B,4BAGOrC,KAAKV,MAAM0C,KAAKK,IAHvB,IAIIW,WAAW,KAJf,YAMGhD,KAAKV,MAAM0C,KAAKW,MAAMN,EAAY,OAGvCY,EAAiBjD,KAAKV,MAAM0C,KAAKkB,QAAO,SAAArD,GAAG,OAAIA,EAAIyB,MAAQ,EAAKhC,MAAM2C,cAC5ErC,QAAQC,IAAIoD,GAfhB,EAgBiDA,EAAe,GAApDxB,EAhBZ,EAgBYA,KAAMF,EAhBlB,EAgBkBA,YAAaC,EAhB/B,EAgB+BA,SAAUF,EAhBzC,EAgByCA,IAC/B6B,EAA6B,CAC/B1B,OAAMF,cAAaC,WAAUF,OAlBrC,SAoBUlB,MAAM,mCAAD,OAAoCJ,KAAKV,MAAM2C,WAA/C,SAAkE,CACzE5B,OAAQ,QACRC,KAAMC,KAAKC,UAAU2C,GACrB1C,QAAS,CACL,eAAgB,sBAxB5B,gD,wHA6BA,WAAmBd,GAAnB,iBAAAO,EAAA,6DACIN,QAAQC,IAAI,gBACNwC,EAAYC,MAAMC,KAAK5C,EAAEG,OAAO0C,cAAcA,cAAcA,cAAcC,UAAUC,QAAQ/C,EAAEG,OAAO0C,cAAcA,eACnHY,EAAgBzD,EAAEG,OAAO0C,cAAcA,cAAc3B,GAC3DjB,QAAQC,IAAIuD,GAEZpD,KAAKC,SAAS,CACVgC,WAAY,GACZD,KAAK,GAAD,mBACGhC,KAAKV,MAAM0C,KAAKW,MAAM,EAAGN,IAD5B,4BAGOrC,KAAKV,MAAM0C,KAAKK,IAHvB,IAIIW,WAAW,KAJf,YAMGhD,KAAKV,MAAM0C,KAAKW,MAAMN,EAAY,OAdjD,SAiBUjC,MAAM,mCAAD,OAAoCgD,EAApC,SAA0D,CACjE/C,OAAQ,WAlBhB,gD,2EAsBA,WAAU,IAAD,OAEL,OADAT,QAAQC,IAAIG,KAAKV,OAEb,qCACI,uBAAMuB,GAAG,qBAAqBC,SAAUd,KAAKN,aAA7C,UACI,qBAAKmB,GAAG,aAAR,oCACA,qBAAKA,GAAG,cAAR,SACI,sBAAKA,GAAG,cAAR,UACI,uBAAOE,QAAQ,oBAAf,qBACA,uBAAOF,GAAG,oBAAoBd,MAAOC,KAAKV,MAAMgC,IAAKN,SAAUhB,KAAKR,aAAcyB,KAAK,OAAOC,KAAK,MAAMC,YAAY,eAKjI,wBAAON,GAAG,sBAAV,UACI,gCACI,+BACI,6CACA,0CACA,sCACA,oBAAIA,GAAG,SAAP,kBACA,oBAAIA,GAAG,SAAP,yBAGR,gCAEQb,KAAKV,MAAM0C,KAAKe,KAAI,SAAClD,GACjB,IAAQyB,EAAqCzB,EAArCyB,IAAKC,EAAgC1B,EAAhC0B,YAAaC,EAAmB3B,EAAnB2B,SAAUC,EAAS5B,EAAT4B,KAC9B4B,EAAO,IAAIC,KAAK7B,GAAM8B,cACtBC,EAAQ,IAAIF,KAAK7B,GAAMgC,WAAa,EACtCC,EAAK,UAAM,IAAIJ,KAAK7B,GAAMkC,WAC9BD,EAAQd,OAAOc,GAAS,GAAhB,WAAyBA,GAAzB,UAAsCA,GAC9C,IAAME,EAAU,UAAMP,EAAN,YAAcG,EAAd,YAAuBE,GACjCrB,EAAY,EAAK/C,MAAM0C,KAAKU,QAAQ7C,GACpCgE,EAAe,EAAKvE,MAAM0C,KAAKK,GAAWW,UAChD,OACI,mCACI,qBAAInC,GAAIS,EAAR,UACI,6BAEQuC,EACI,uBAAOhD,GAAG,mBAAmBI,KAAK,OAAOlB,MAAOwB,EAAaP,SAAU,EAAKxB,cAA5E,UAAkG8B,EAAlG,MACAC,GAJZ,UAAYD,EAAZ,MAOA,6BAEQuC,EACI,uBAAOhD,GAAG,gBAAgBI,KAAK,SAASlB,MAAOyB,EAAUR,SAAU,EAAKxB,cAAxE,UAA8F8B,EAA9F,MACAE,GAJZ,UAAYF,EAAZ,MAOA,6BAEQuC,EACI,uBAAOhD,GAAG,YAAYI,KAAK,OAAOlB,MAAO6D,EAAY5C,SAAU,EAAKxB,cAApE,UAA0F8B,EAA1F,MACAG,EAAKqC,YAJjB,UAAYxC,EAAZ,MAOA,qBAAIT,GAAG,SAAP,UACKjB,QAAQC,IAAI,eAAgBgE,GAC7B,wBAAQE,QAASF,EAAe,EAAK1B,iBAAmB,EAAKD,WAAYrB,GAAG,SAA5E,SAEQgD,EACI,OAAS,QAHrB,UAA6FvC,EAA7F,QAFJ,UAAwBA,EAAxB,MASA,oBAAIT,GAAG,SAAP,SACI,wBAAQkD,QAAS,EAAK3B,aAAcvB,GAAG,SAAvC,6BAAwDS,EAAxD,QADJ,UAAwBA,EAAxB,SA/BJ,UAAqBA,EAArB,uB,GAzLZF,aAyObW,ICxMAiC,E,kDA3BX,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTgC,IAAK,IAET,EAAK2C,gBAAkB,EAAKA,gBAAgBxE,KAArB,gBALR,E,mDAQnB,SAAgB6B,GACZtB,KAAKC,SAAS,CACVqB,QAEJ1B,QAAQC,IAAIyB,K,oBAGhB,WACI,OACI,qCACI,oBAAI4C,MAAO,CAAEC,UAAW,UAAxB,8BACA,cAAC,EAAD,CAAYF,gBAAiBjE,KAAKiE,kBAClC,cAAC,EAAD,IACA,cAAC,EAAD,CAAeA,gBAAkBjE,KAAKiE,yB,GAtBpC7C,aCHlBgD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8426a1d6.chunk.js","sourcesContent":["// import axios from \"axios\";\r\nimport { Component } from \"react\";\r\n\r\nclass CreateUser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        console.log(e.target.value)\r\n        console.log(this.state.username)\r\n        this.setState({\r\n            username: e.target.value\r\n        })\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        await fetch('http://localhost:5000/api/users', {\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(async res => console.log(await res.json()))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form id=\"user-form\" onSubmit={ this.handleSubmit}>\r\n                    <div id=\"form-title\">Create New User </div>\r\n                    <div id=\"label-input\">\r\n                        <label htmlFor=\"user\">User</label>\r\n                        <input id=\"user\" onChange={this.handleChange} type=\"text\" name=\"user\" placeholder=\"username\" value={this.state.username }/>\r\n                    </div>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateUser;","import axios from \"axios\";\r\nimport { Component } from \"react\";\r\n\r\nclass CreateExercise extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: '',\r\n            description: '',\r\n            duration: '',\r\n            date: ''\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const inputName = e.target.name\r\n        const inputValue = e.target.value\r\n        if (inputName === '_id') {\r\n            this.setState({\r\n                _id: inputValue\r\n            })\r\n        } else if (inputName === 'description') {\r\n            this.setState({\r\n                description: inputValue\r\n            })\r\n        } else if (inputName === 'duration') {\r\n            this.setState({\r\n                duration: inputValue\r\n            })\r\n        } else if (inputName === 'date') {\r\n            this.setState({\r\n                date: inputValue\r\n            })\r\n        }\r\n        console.log(this.state)\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(JSON.stringify({\r\n            description: this.state.description,\r\n            duration: this.state.duration,\r\n            date: this.state.date\r\n        }), 'submitting')\r\n        await fetch(`http://localhost:5000/api/users/${this.state._id}/exercises`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                description: this.state.description,\r\n                duration: this.state.duration,\r\n                date: this.state.date\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Accept': 'application/json, text/plain, */*'\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data))\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <form id=\"exercise-form\" onSubmit={this.handleSubmit}>\r\n                    <div id=\"form-title\">Create New Exercise</div>\r\n                    <div id=\"form-inputs\">\r\n                        <div id=\"label-input\">\r\n                            <label htmlFor=\"_id\">ID</label>\r\n                            <input id=\"_id\" onChange={this.handleChange} type=\"text\" name=\"_id\" placeholder=\"ID\" value={this.state._id} />\r\n                        </div>\r\n                        <div id=\"label-input\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input id=\"description\" onChange={this.handleChange} type=\"text\" name=\"description\" placeholder=\"description\" value={this.state.description} />\r\n                        </div>\r\n                        <div id=\"label-input\">\r\n                            <label htmlFor=\"duration\">Duration</label>\r\n                            <input id=\"duration\" onChange={this.handleChange} type=\"text\" name=\"duration\" placeholder=\"duration\" value={this.state.duration} />\r\n                        </div>\r\n                        <div id=\"label-input\">\r\n                            <label htmlFor=\"date\">Date</label>\r\n                            <input id=\"date\"  onChange={this.handleChange} type=\"date\" name=\"date\" placeholder=\"date\" value={this.state.date} />\r\n                        </div>\r\n                    </div >\r\n                    <button id=\"exercise-submit-button\" type=\"submit\">Submit</button>\r\n                </form >\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateExercise;","import { Component } from \"react\";\r\n\r\nclass ExercisesList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: '',\r\n            logs: [],\r\n            exerciseID: '',\r\n        }\r\n        // this.handle_idChange = this.props.handle_idChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleEdit = this.handleEdit.bind(this)\r\n        this.handleEditSubmit = this.handleEditSubmit.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    handleChange(e) {\r\n        console.log(e.target.value)\r\n        if (e.target.id === 'exercises-list-id') {\r\n            this.setState({\r\n                _id: e.target.value\r\n            })\r\n        } else {\r\n            const listIndex = Array.from(e.target.parentElement.parentElement.parentElement.children).indexOf(e.target.parentElement.parentElement);\r\n            if (e.target.id === 'edit-description') {\r\n                this.setState({\r\n                    logs: [\r\n                        ...this.state.logs.slice(0, listIndex),\r\n                        {\r\n                            ...this.state.logs[listIndex],\r\n                            description: e.target.value\r\n                        },\r\n                        ...this.state.logs.slice(listIndex + 1)\r\n                    ]\r\n                })\r\n            } else if (e.target.id === 'edit-duration') {\r\n                this.setState({\r\n                    logs: [\r\n                        ...this.state.logs.slice(0, listIndex),\r\n                        {\r\n                            ...this.state.logs[listIndex],\r\n                            duration: Number(e.target.value)\r\n                        },\r\n                        ...this.state.logs.slice(listIndex + 1)\r\n                    ]\r\n                })\r\n            }\r\n            e.target.focus()\r\n        }\r\n    }\r\n\r\n    async handleSubmit(e) {\r\n        e.preventDefault();\r\n        console.log(this.state._id)\r\n        await fetch(`http://localhost:5000/api/users/${this.state._id}/logs`, {\r\n            method: 'GET'\r\n            // headers: {\r\n            //     'Content-type': 'application/json'\r\n            // }\r\n        })\r\n            .then(async res => {\r\n                const data = await res.json();\r\n                const dataPlusEditing = [...data.logs].map(data => {\r\n                    return {\r\n                        ...data,\r\n                        isEditing: false\r\n                    }\r\n                })\r\n                console.log(dataPlusEditing);\r\n                this.setState({\r\n                    logs: dataPlusEditing\r\n                })\r\n            })\r\n            .catch(error => console.log(error))\r\n        this.setState({\r\n            _id: ''\r\n        })\r\n    }\r\n\r\n    async handleEdit(e) {\r\n        console.log('handleEdit');\r\n        console.log(e.target.parentElement.parentElement.id);\r\n        const listIndex = Array.from(e.target.parentElement.parentElement.parentElement.children).indexOf(e.target.parentElement.parentElement);\r\n        this.setState({\r\n            exerciseID: e.target.parentElement.parentElement.id,\r\n            logs: [\r\n                ...this.state.logs.slice(0, listIndex),\r\n                {\r\n                    ...this.state.logs[listIndex],\r\n                    isEditing: true\r\n                },\r\n                ...this.state.logs.slice(listIndex + 1)\r\n            ]\r\n        });\r\n        // const listIndex = Array.from(e.target.parentElement.parentElement.parentElement.children).indexOf(e.target.parentElement.parentElement);\r\n    }\r\n\r\n    async handleEditSubmit(e) {\r\n        console.log('handleEditSubmit');\r\n        const listIndex = Array.from(e.target.parentElement.parentElement.parentElement.children).indexOf(e.target.parentElement.parentElement);\r\n        this.setState({\r\n            exerciseID: '',\r\n            logs: [\r\n                ...this.state.logs.slice(0, listIndex),\r\n                {\r\n                    ...this.state.logs[listIndex],\r\n                    isEditing: false\r\n                },\r\n                ...this.state.logs.slice(listIndex + 1)\r\n            ]\r\n        });\r\n        const toBeUpdatedLog = this.state.logs.filter(log => log._id === this.state.exerciseID);\r\n        console.log(toBeUpdatedLog);\r\n        const { date, description, duration, _id } = toBeUpdatedLog[0];\r\n        const toBeUpdatedLogMinusEditing = {\r\n            date, description, duration, _id\r\n        }\r\n        await fetch(`http://localhost:5000/api/users/${this.state.exerciseID}/logs`, {\r\n            method: 'PATCH',\r\n            body: JSON.stringify(toBeUpdatedLogMinusEditing),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    async handleDelete(e) {\r\n        console.log('handleDelete')\r\n        const listIndex = Array.from(e.target.parentElement.parentElement.parentElement.children).indexOf(e.target.parentElement.parentElement);\r\n        const toBeDeletedID = e.target.parentElement.parentElement.id;\r\n        console.log(toBeDeletedID);\r\n        // make sure exerciseID and logs set to default(exercise: empty, logs[listIndex].isEditing: false)\r\n        this.setState({\r\n            exerciseID: '',\r\n            logs: [\r\n                ...this.state.logs.slice(0, listIndex),\r\n                {\r\n                    ...this.state.logs[listIndex],\r\n                    isEditing: false\r\n                },\r\n                ...this.state.logs.slice(listIndex + 1)\r\n            ]\r\n        });\r\n        await fetch(`http://localhost:5000/api/users/${toBeDeletedID}/logs`, {\r\n            method: 'DELETE'\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <>\r\n                <form id=\"get-exercises-form\" onSubmit={this.handleSubmit}>\r\n                    <div id=\"form-title\">Get Your Exercise Logs</div>\r\n                    <div id=\"form-inputs\">\r\n                        <div id=\"label-input\">\r\n                            <label htmlFor=\"exercises-list-id\">User ID</label>\r\n                            <input id=\"exercises-list-id\" value={this.state._id} onChange={this.handleChange} type=\"text\" name=\"_id\" placeholder=\"ID\" />\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n                <table id=\"exercise-list-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Description</th>\r\n                            <th>Duration</th>\r\n                            <th>Date</th>\r\n                            <th id=\"action\">Edit</th>\r\n                            <th id=\"action\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.logs.map((log) => {\r\n                                const { _id, description, duration, date } = log;\r\n                                const year = new Date(date).getFullYear();\r\n                                const month = new Date(date).getMonth() + 1;\r\n                                let aDate = `${new Date(date).getDate()}`;\r\n                                aDate = Number(aDate) < 10 ? `0${aDate}` : `${aDate}`;\r\n                                const YYYY_MM_DD = `${year}-${month}-${aDate}`;\r\n                                const listIndex = this.state.logs.indexOf(log);\r\n                                const onEditingRow = this.state.logs[listIndex].isEditing;\r\n                                return (\r\n                                    <>\r\n                                        <tr id={_id} key={`${_id}1`}>\r\n                                            <td key={`${_id}2`}>\r\n                                                {\r\n                                                    onEditingRow ?\r\n                                                        <input id=\"edit-description\" type=\"text\" value={description} onChange={this.handleChange} key={`${_id}3`} /> :\r\n                                                        description\r\n                                                }\r\n                                            </td>\r\n                                            <td key={`${_id}4`}>\r\n                                                {\r\n                                                    onEditingRow ?\r\n                                                        <input id=\"edit-duration\" type=\"number\" value={duration} onChange={this.handleChange} key={`${_id}5`} /> :\r\n                                                        duration\r\n                                                }\r\n                                            </td>\r\n                                            <td key={`${_id}6`}>\r\n                                                {\r\n                                                    onEditingRow ?\r\n                                                        <input id=\"edit-date\" type=\"date\" value={YYYY_MM_DD} onChange={this.handleChange} key={`${_id}7`} /> :\r\n                                                        date.toString()\r\n                                                }\r\n                                            </td>\r\n                                            <td id=\"action\" key={`${_id}8`}>\r\n                                                {console.log('onEditingRow', onEditingRow)}\r\n                                                <button onClick={onEditingRow ? this.handleEditSubmit : this.handleEdit} id=\"action\" key={`${_id}9`}>\r\n                                                    {\r\n                                                        onEditingRow ?\r\n                                                            \"Done\" : \"Edit\"\r\n                                                    }\r\n                                                </button>\r\n                                            </td>\r\n                                            <td id=\"action\" key={`${_id}10`}>\r\n                                                <button onClick={this.handleDelete} id=\"action\" key={`${_id}11`}>\r\n                                                    Delete\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExercisesList;","import CreateUser from './components/CreateUser';\r\nimport CreateExercise from './components/CreateExercise';\r\nimport './App.css'\r\nimport React, { Component } from 'react';\r\nimport ExercisesList from './components/ExercisesList';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: ''\r\n        }\r\n        this.handle_idChange = this.handle_idChange.bind(this);\r\n    }\r\n\r\n    handle_idChange(_id) {\r\n        this.setState({\r\n            _id\r\n        })\r\n        console.log(_id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1 style={{ textAlign: \"center\" }}>Exercise Tracker</h1>\r\n                <CreateUser handle_idChange={this.handle_idChange}/>\r\n                <CreateExercise />\r\n                <ExercisesList handle_idChange={ this.handle_idChange}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}